import io
import pathlib
import os
from os.path import exists

from PIL import Image, ImageOps


class STT:
    
    SKINS_DIR = "skins"
    TOTEMS_DIR = "totems"
    PACK_MC_META = "pack.mcmeta"
    ASSETS_DIR = "assets"
    MINECRAFT_DIR = "minecraft"
    OPTIFINE_DIR = "optifine"
    CIT_DIR = "cit"
    TOTEM_OF_UNDYING_DIR = "totem_of_undying"

    def __init__(self):

        os.makedirs(self.SKINS_DIR, exist_ok=True)
        os.makedirs(os.path.join(self.TOTEMS_DIR, self.ASSETS_DIR, self.MINECRAFT_DIR, self.OPTIFINE_DIR,
                                 self.CIT_DIR, self.TOTEM_OF_UNDYING_DIR), exist_ok=True)

        # My skin, just for test
        if not exists("skins\\UnFamousSoul.png"):
            image = Image.open(io.BytesIO(bytearray(bytearray(b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00@\x00\x00\x00@\x08\x03\x00\x00\x00\x9d\xb7\x81\xec\x00\x00\x00\x01sRGB\x00\xae\xce\x1c\xe9\x00\x00\x00\x04gAMA\x00\x00\xb1\x8f\x0b\xfca\x05\x00\x00\x00\xffPLTE\xc4\xc6\xca\xce\xcf\xd4\xd6\xd8\xdc\xff\xc4\x82\xff\xcc\x91\xff\xcf\x99\xff\xd3\xa1\xff\xd6\xa8\xde\xdf\xe4\xe5\xe7\xeb\xec\xed\xf1\xf2\xf3\xf7\xf8\xf9\xfc\xff\xda\xaf\xff\xc8\x8a\xad\xad\xad\xad%\x1c\xff\xc1z\xcf\xc8\xc8\xceLQ\xceLR\xd0\xc8\xc9\xc6\x9ep\xc0\x9bs\xfc\xd3\xa6\xb5\x95r\xbf\x9br\xfd\xd1\x9f\xfc\xd7\xac\xfd\xd4\xa6\x0f\x0f\x11\x13\x10\x13\x15\x15\x15\x00\x02\x03\x01\x03\x04\x00\x00\x01\x02\x04\x05\x00\x00\x00\x05\x07\t\x00\x01\x02\xfa\xd3\xc3\xf8\xc2\xac\x11\x0e\x11\x12\x11\x13\x14\x14\x14\x14\x15\x15\x0f\x0e\x10\x11\x10\x12\x12\x10\x13\x15\x15\x14\x14\x15\x14\x11\x12\x12\x11\x11\x12\n\n\n\x13\x11\x13\x0e\x0e\x0e\x03\x06\x07\x0b\x0b\n\x10\x0e\x11\x01\x00\x01\x11\x0f\x11\x0f\x10\x10\xe7\xe7\xe6\x0b\n\x0b\x0b\n\n\x00\x01\x01\xec\xec\xec\x01\x00\x00\x01\x01\x00\n\x0b\x0b\n\n\x0b\xf3\xf3\xf3\n\x0b\n\x00\x01\x00\xf1\xf1\xf1\xfb\xfb\xfb\x15\x14\x15\xff\xff\xff\x14\x14\x15\x15\x14\x14D\x1b\x00\xb9\xa6\x00\xc8\xad\x00\x0f\x0e\x11\x00\x00\x00\xe8\xab\xc3\xb7\x00\x00\x00UtRNS\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\xff\x00\xb0\xa1\x07\xcf\x00\x00\x03VIDATXG\xcdVy_\xd3@\x10M\x1aZ\x92\x1eB\xbcO\xb2\x18\xb6-\xd1r\x14#VPPP\x10\x91\xa2\xe6\xfb\x7f\x16\xdf\xecN\x926mHR\xfc\x83\xd7_\xb2\xbb\xb33\xaf3\xb3G\xc6\x88\x18\x86\xa9\x7f\xdc$\xf2"$\x8a\xa6\x86\x01\n\x05\x16\x17b\xc2\x03\xb3\xc6\xb6\x84\xc5<\x00\xc3\x7f\xf1\xc0\xb2n\xe5\x81\xb5T\xaf\xd7\xad\xc5=\x80}\xa3\xb1\\\xb7X\\\x88\x84\xc0v\x9a\xadv\xab\xe9X\xf5F\xa7\xd3Y\x9e%\xd0\xf3<H\x81\xa4\xa9\x9f\x1d\x138\xbc\x11\xb8Is\x91G`\xb6L\x87\x1e\xb6\xb7\xedx\xcc\x13\xac\x97\xce\xb3 \x86Qk\xd7\x9a\xf4\xf0|-\x19s\x87\xf5\xd2y\x16\xc40\xec\x96\xed\xe0i\xb5\xda\xf7h\xde4\xf5\xd8Q/<\xac\x87\xf9H\xcf\xb3 \x86\xc1\x8a\xcd\xe6\xcaj\xdd^]1bFMc\xb7X\xafI\xd1\x83\xcd\xc8n\x10C\xb9j\xb9\x8es\xffAc\xf9\xe1#\xc3p]\xe5\xba\x0e\xa4\xd6f\xbd\\\x18*YK\x96\xeb>~\xf2\xb4\xf3\xec\xb9\xeb\xba\x96J\x9eN\xa5\x19{\x90\x0b^\xac%\xcb\xaa\xbf\xe8t^\xbe\xb2\xb0\x8f\x95\x84\'\nw\xa4\ni\xcd\xf3<\x01(\t\xb0\xfe\xda\xf776|\xd9\xed\xf6zx$\x8b#\t\xf4\xfb\xfdM\x1e*(\x82\xc0\xf3\xde\x08\xf1v\xa0$\x00)\x12\xba]z\xf7z,\xce\'\xd8\xf2\xb6w\xc4\xee0\xf1@\xca=\x80lK\x12\x04\xef\xa6C\x90{P\xeb\x83A\x13\xdc\x1cB\xb0\x16\x04\xc1v(\xbd\x1d\xcf{\xefy\xc1:\x05\xbdO\x04\xfb\x12\t\xf0}\xcaB\xef\xc3\x06\x19\x13(9\xc4\xcb\xf6\x91\x11\x02\xa3\x8f\xe1A\x10\x1c~\x02U\x08\x8f\xf1\xa7\x9f\x01jIU\t\xc8\x19t\xf0\xf6}\xe9O\x84E\x04Ga0\x92\xf2\x00\xba\xa3p!\x82\xf0\x18v\xc0\x17\x89\xbe^\xbb\xaf\x80ZC\x19\x87\xa0W\x14!!\x04\xb4]\xb6\xd7\x04\xc0\xc9\xa9<\x95\xf2\xdb\xf1Qu\x82\xe3\x11\x1c\x0f\xa5\x7f\x02\x1f\xc2\xf0\xbb\xf6\xf8\x0c\xd0N\x97\x08\x01\x01\xc0\x0eR?\xcdA\x15\x02\x18\x9d\x9f\x9f\xfb\xf2\x07r@\xc9P!\\\x9c]\\\x94\r\x81 \x04\xd6\x009\xa0X\x14\xc1O\xa0$\x81\x10\x97B\x0c\x86b\x80\x9d\xb8\x8b\x81\xf6\xf8\x17\xa0\x9d.\x0c\xe1\x8a\r\xc7\xa0\xb9\x04\x8b\xd6\xbf\xfe\xfd\xe7Z\x9b\x14\x12\xc0X\x0c\xc12DK^h}\x9coO\x9b\xd0~\xa6\x10hs\x03\x9b\n\xe8\xb0}\xfaaY\x14w\x89 \xbd\x0e*!\xeb\xc1!\xb7\xa51E\x10\x04\xdc\xa9\x00M\xb0\xa5\xde\x0b\xa1t\x12s\xb72\xb7\x85\xb85A\x1e\xee\n\xc18\xf9\xaaU\x86A\xc7\x107\x02\xdd\tt0s\xb7c\xeeqVoQ\xec\xc1\xcd\x04\x97\x8b\x9d\x03\xc2\xdc$f\xeb\x05\\Kr\xf2\x12\x99\xc4\\\x82y\xf5B%\x82\xd9z\xa1\x0c\x81\xb8\xe2\xce\x9cz\xa1\xac\x07kx\xb2\xf5\x02\xed}"`$\xd9\x8f\x91\t!\xf8K\xdf\x99\xa9z\x01\xcbF\xb7\xbaZ\xc6\x9e\xf4Y1\x01\x13\xa47\t\xec\xa7\xeb\x85r\x04)\xc8\x83\xc9z\x81BP\xe7\x97\x8e3\x9d\xe7\xccx.\x01\x90\xd4\x0b\xd5\t\xb2\xf5B\xf5\x102\xf5Be\x82L\xbd\x90u\x99\xd5\x12h\x82\x89S\xac20Q/\x14\x12\xe0\xe3\x8e/;n\x05|\xdb\x07c\x81~\xa6^\xc8\x84\x90\x1d\xcfx0S/\x94"\x18\xa7\x04\xd9z!\xae\x07\x18Sur\x14E\xd1?V\x14\xd0oJ+9\xab\x00\x00\x00\x00IEND\xaeB`\x82'))))
            image.save("skins\\UnFamousSoul.png")

        if not exists("totems\\pack.png"):
            image = Image.open(io.BytesIO(bytearray(b'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\xfa\x00\x00\x00\xfa\x08\x06\x00\x00\x00\x88\xecZ=\x00\x00\x00\tpHYs\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x0e\xbaIDATx\x9c\xed\x9dIh\x15[\x10\x86\xdf*\xf0\xa2q\x88\xe3\xef\x0c\x0e\xa8\x08N\xb8q!\x0e\xb8rc\\\x88(\x8aBV.\\\x88\x08\x82\x13\x8a\xb8\x15\x11Ep\x06q\xdc(\x89(\xe2\xb0\xd3\x85\xb8QQP\x1c\x11Qp\xa1\xb8\x10\xa7~T\xc3\xb9\xdc\\c4\xcf$\xe7t\xd7\xd7P\xdc\xf6\xe6\xde\xbem\xd5\xffU\xd59=\xfd#)\xc3\xf0\x01\x1aP\xa9}\xf0O\xec\x1d\xc0\xf0\x01\x1a\x10\xa0#\x02\x12\x01\x1a\x10\x15\x1d\x11\x90\x08\xd0\x80h\xdd\x11\x01\x89@\xf8\x801:" \x11\xc8\x81\x0f\x98\x8cK \x08\x18>\x10\xa0#\x02\x12\x01\x1a\x10\x15\x1d\x11\x90\x08\xd0\x80h\xdd\x11\x01\x89@\xee}\xc0\x18\x1d\x11\xb8\x87@\x0e4\x00\xe8\t\x04\x01\xc3\x07\x02tD@"@\x03\xa2\xa2#\x02\x12\x01\x1a\x10\xad;" \x11\xc8\xbd\x0f\x18\xa3#\x02\xf7\x10\xc8\x81\x06\x00=\x81 `\xf8@\x80\x8e\x08H\x04h@TtD@"@\x03\xa2uG\x04$\x02\xb9\xf7\x01ctD\xe0\x1e\x029\xd0\x00\xa0\'\x10\x04\x0c\x1f\x08\xd0\x11\x01\x89\x00\r\x88\x8a\x8e\x08H\x04h@\xb4\xee\x88\x80D \xf7>`\x8c\x8e\x08\xdcC \x07\x1a\x00\xf4\x04\x82\x80\xe1\x03\x01:" \x11\xa0\x01Q\xd1\x11\x01\x89\x00\r\x88\xd6\x1d\x11\x90\x08\xe4\xde\x07\x8c\xd1\x11\x81{\x08\xe4@\x03\x80\x9e@\x100| @G\x04$\x024 *:" \x11\xa0\x01\xd1\xba#\x02\x12\x81\xdc\xfb\x801:"p\x0f\x81\x1ch\x00\xd0\x13\x08\x02\x86\x0f\x04\xe8\x88\x80D\x80\x06DEG\x04$\x024 ZwD@"\x90{\x1f0FG\x04\xee!\x90\x03\r\x00z\x02A\xc0\xf0\x81\x00\x1d\x11\x90\x08\xd0\x80\xa8\xe8\x88\x80D\x80\x06D\xeb\x8e\x08H\x04r\xef\x03\xc6\xe8\x88\xc0=\x04r\xa0\x01@O \x08\x18>\x10\xa0#\x02\x12\x01\x1a\x10\x15\x1d\x11\x90\x08\xd0\x80h\xdd\x11\x01\x89@\xee}\xc0\x18\x1d\x11\xb8\x87@\x0e4\x00\xe8\t\x04\x01\xc3\x07\x02tD@"@\x03\xa2\xa2#\x02\x12\x01\x1a\x10\xad;" \x11\xc8\xbd\x0f\x18\xa3#\x02\xf7\x10\xc8\x81\x06\x00=\x81 `\xf8@\x80\x8e\x08H\x04h@TtD@"@\x03\xa2uG\x04$\x02\xb9\xf7\x01ctD\xe0\x1e\x029\xd0\x00\xa0\'\x10\x04\x0c\x1f\x08\xd0\x11\x01\x89\x00\r\x88\x8a\x8e\x08H\x04h@\xb4\xee\x88\x80D \xf7>`\x8c\x8e\x08\xdcC \x07\x1a\x00\xf4\x04\x82\x80\xe1\x03\x01:" \x11\xa0\x01Q\xd1\x11\x01\x89\x00\r\x88\xd6\x1d\x11\x90\x08\xe4\xde\x07\x8c\xd1\x11\x81{\x08\xe4@\x03\x80\x9e@\x100| @G\x04$\x024 *:" \x11\xa0\x01\xd1\xba#\x02\x12\x81\xdc\xfb\x801:"p\x0f\x81\x1ch\x00\xd0\x13\x08\x02\x86\x0f\x04\xe8\x88\x80D\x80\x06DEG\x04$\x024 ZwD@"\x90{\x1f0FG\x04\xee!\x90\x03\r\x00z\x02A\xc0\xf0\x81\x00\x1d\x11t\x95\x08\x86\x0e\x1d\xda\xee:\xa6\xd2\xfb\x80\x8a\xee\xc8\x00]\xd1c\x00\xe8\t8\xa3\xec\x06\xe8\x8a\x1e\x03@O\xc0\x19e\xb6a\xc3\x86e\xfd\xfb\xf7\xcf\xe6\xcd\x9b\x97\xcd\x9f??_\xb7\xf7b\xef\x17\xa6\x1e\xf1\x01\xad\xbb\x93J>b\xc4\x88\xac\xae\xae.\xdb\xb1cG\xb6s\xe7\xce|\xdd\xde\x8b\xbdo\x98\x00\x1d\x11t\x9d\x08\x86\x0f\x1f\x9e\xd5\xd7\xd7g---\xd9\xe5\xcb\x97\xb3^\xbdz\xe5\xef\xe1c\xb9\xf0\x01\x15\xdd\x89\r\x192$o\xd5\x9f?\x7f\x9e\xbd~\xfd:\xaf\xe6\xf6^\xec\xfd\xc2\x04\xe8\x88\xa0k\xda\xf60>\x9f;wn\xf6\xed\xdb\xb7\xec\xc7\x8f\x1f\xd9\xc2\x85\x0b\xb3~\xfd\xfa\xe5U\x9dCm*\xbd\xd6\xa8\xe8\x0e\xcc\xaa\xf7\xbf\xff\xfe\x9bm\xdc\xb81\x0b\xcb\x96-[\xf2\xf7\x18\xa7+z|\x00=\x01\x07\x95\xc1\xac\xa2\xf7\xed\xdb7\xbbp\xe1B\x05\xf4+W\xae0\xf3\xae\xf8\xb1\x01\xf4\x04\x9cS\x16\x1b<xp6n\xdc\xb8\xec\xcd\x9b7\x15\xd0\xdf\xbf\x7f\x9fM\x9e<9\x1b4hP\xf4\xfd\xc3\xd4\xed>\xa0u/\xb1\xd0l\xecmc\xf0\xde\xbd{g\xcb\x96-\xcb\x01\xff\xfe\xfd{>N\xb7e\xcd\x9a5\xf9\xec;\xed\xbb\xa2\xc7\n\xd0\x13pR\x91\xcd@7\x98\xf7\xef\xdf\x9f\xc3\xfd\xf5\xeb\xd7\xdcl9~\xfcx\x9e\x048\xcc\xa6\xe8q\x02\xf4\x04\x9cT\x86Y\xf7\x87\x0f\x1fV*\xba\x99-/^\xbc\xc8\xc6\x8c\x19\xc3a6\xc5\x8f\x13\xa0\'\xe0\xa4\xa2\x9aU\xea>}\xfad\x8b\x16-\xaa\x8c\xcd\xed\xd0\x9aY\x80}\xe9\xd2\xa5Tu\xc5\x8f\x15\xa0\'\xe0\xa4\xa2\x9a\x8d\xbd\xedl\xb8={\xf6T\xdav\x83<\xac\xdbr\xe4\xc8\x11\xce\x92S\xfcX\x01z\x02N*\xfad\\u\xdb^[\xd1_\xbdz\x95\x8d\x1d;6\x9f\x99\x8f\xbd\xbf\x98\xba\xcd\x07\xcc\xba\x97T`\x06xCCC\xd6\xd4\xd4\xd4\xa6e\xaf\xb6\x00\xfb\xea\xd5\xabi\xdfUn\x03\xf4\x12Wr\x9bm?v\xecX\x9bV\xbdz\t\xef\xd9\x8946\x96g\xf6]\xd1c\x07\xe8\t8\xab(f\xb3\xecv"\xcc\xa4I\x93\xb2\xb7o\xdf\xb6i\xdbk\'\xe5l\xf9\xf4\xe9S6k\xd6\xac\xac\xb1\xb1\x91k\xd4UN\xa3\xa2\x97\xf4\xdas\x9b\x84[\xbf~}\x0er\xb8\x90\xa5=\xd0CU\xdf\xb5kW\xfe\x1d\xfb.\x17\xb9(z\x1c\x01=\x01\xa7\x15\xc1lr\xed\xce\x9d;\x15\xd0\x7f\xb5\x84q\xfa\x93\'O\xb2\xd1\xa3GsL]\xf1c\x07\xe8\t8\xac\x08cs\x9b\x84\xb3\xe3\xe3\xb53\xed\xb5Kx?$\x82\xb5k\xd7VN\x89\xa5\xaa\xabTF\xeb^\xc2\xf1\xb9]g~\xf5\xea\xd5\xdfV\xf3\xb0\x84\xcf\xdc\xbd{\x97\x8a\xae\xf81\x04\xf4\x04\x1c\x96z5\xb7\xd9\xf3\xc5\x8b\x17\xfftH\xedWKmUonn\xa6\xaa\xab|FE/Y5\xb7\x99\xf3\x9b7o\xb6\xa9\xd4\x1d\x81^[\xd5\xef\xdf\xbf\x9fo\x87\xd6]\xd1\xe3\t\xe8\t8.\xc5\x99v\x1b_[E\x0e\xe0\xfe\xae\x9aWWu[\xc2\x0c\xfc\xe6\xcd\x9b+w\x9f\x01x\x95\xc2\xa8\xe8%\x80<\x1c7\x1f?~|~EZ\xf5lzg@\x0f\xdf\xf9\xf8\xf1c~\\\xdd\xee3\xc7=\xe5\x14=\xc6\x80\x9e\x80\x03S\xb0ps\x89\x93\'O\xb6\xa9\xcc\x7f\x02\xf9\xaf\xaa\xfa\xf5\xeb\xd7\xf3a@uB\x89\xfd\xff\xc4\xf4\xbf}@E/\xb0\x80\x0c\xbe\x91#G\xe6m\xf6\xbau\xeb*U\xf9O&\xe1\xfe\x04\xf6\xdd\xbbw\xd3\xc2\xab\x1c\x06\xe8\x05\x86\xdc\xc6\xd0v\xcc|\xc1\x82\x05\xd9\xe7\xcf\x9f\xdb\xb4\xdf\x9d\x85\xbc\xfa;\xd5\xdf]\xbe|y~\xc6\x9c%\x14\xaa\xba\xa2\xc7\x1d\xd0\x9dAn\xed\xba\xb5\xd6v>\xbb=\x94\xa1\xb3\xb3\xec\xbf\x83=l\xeb\xc3\x87\x0f\xd9\xec\xd9\xb3\xf3\xbb\xc829\xa7\xe8\xb1\x07tg\x93ov\x8a\xab\xbd\xde\xbe}\xbbM\xbb\xfd7\x90\xd7\xc2\x1e\xb6\xf9\xf8\xf1\xe3l\xc2\x84\t\xd9\x80\x01\x03\x98\x9cS1\x8d\xd6\xbd\x80\x90\xdb\xabU\xf3\x8b\x17/\xfe\x04yW\x81^\x0b\xfb\xad[\xb7*\t\x86\x99xE\xd7\x02\xa0\x97\x1cr[\xb7\xb3\xdf\xec\x0e\xae\xdd\x01yG\xb0\xb7\xb6\xb6f\x03\x07\x0e\xac<\xc7\x8d1\xbb\ncT\xf4\x02Anf\x87\xd1\x0e\x1c8\xd0\xe6\xa4\x98\x00fW/\xed\xc1~\xe6\xcc\x99\xfc\xf8zuw\x11\xdb?\x98\x00\xbdl\x90\xef\xdd\xbb\xb7G \xaf\x86=\xbc\x06\xd8O\x9c8\x91O\xce\x01\xbb\ncT\xf4\x02@n\xeb\xd5\x90W\xdf-\xa6;!o\x0f\xf60\x1b\x7f\xf4\xe8Q`W|\x8d\x00zI \xb7W\x1b\x93\x87\'\xad\xf44\xe4\x1d\xc1n\x95\xdd\xdax\x1b\xb33A\xa7\xa4\x8d\x8a\x9e(\xe4\x06\x8e\x01d Y\xf5\xec\xc9v\xbd3\xb0\x9f>}:?\xec\xc6l\xbc\xa2\xeb\x06\xd0\x0b\x08\xb9]\xa4b\xf0\x9c;w.\t\xc8;\x1a\xb3\xdba>\xdbo\x9b\x91\xa7\xb2+I\xa3\xa2\'\xd8\xae[\x15\xb7SN\xc3]b\xaa\x9f\xb0\x12\x13\xf2\x8e`\xbfq\xe3F~\xcf9\xdbwf\xe3\x15]K\x80\x9e\xb0\x19 V\x15\xa7M\x9b\x96=x\xf0 I\xc8\xc3R\xbdO_\xbe|\xc9\xd7\xed\x890\xd3\xa7O\xcf\xff\x0fa\x12\x11S\x12>\xa0\xa2\'\x06\xba\xb5\xecS\xa6L\xa9\xdc\xc1\xb5\x08\xa0\x87\xaan\xfbl\xfbn\xff\x07@Wt=\x01z\xe2\xad{\xb8\x0e\xbc\xa5\xa5%I\xd8\xdb\x83\xdc\xf6\xd5\xf69<\x04\x82\x13i\x14]O\x80\x9e8\xec6\xa1e\x13q6\x9b}\xea\xd4\xa9d\'\xe3\xc2\xcc\xbb\xed#3\xef\x8a\xae\x1d@/\xf0\xe15\xbbu\xf3\xa1C\x87\x92\x80\xbd=\xc8m\xdfl\x1f9\x96\xae\xe8\xba\x01\xf4\x82\xc2\x9e\xea\t3\xe1\xe6\x16\xb6O\xb6o\x9c\n\xab\xe8z\x01\xf4\x12\xc0\x1eN\x81\xdd\xb7o_\x94\xca\xde^%\xb7}\xb1}\xb2}cL\x1e_+\x80^2\xd8Ce\x8fqQK\x80\xdc\xf6\x01\xc8\x15]\x1b\x80^b\xd8\xadU>r\xe4H\x8f\xcc\xc6\xb77\xbbn\xbfm\xfb`\xfbB%Wa\x8c\xe3\xe8\x05\x83\xdd^m\xf2\xeb\xec\xd9\xb3\x15\xd8{\xea\xc6\x13\xf6\x9b\xf6\xdb\x8c\xc9\x15]\x0f\x80\xee\x00v\x9b\xe1\xb6\x93R\xae]\xbb\xd6-\xb0\xb7\x07\xb9\xfd\x96\xfd&w\x97Qt\x1d\x00\xba\xa3Cov\x9a\xe9\x981c\xb2{\xf7\xee\xfd\x04{W\x80^\xbdM\xfb\r\xfb-.ZQ\xf4\xf8\x03\xba3\xd8\xed\xd6\xcb\xd6F\xcf\x981#{\xf7\xee]\xb7\xdd\xee\xd9\xb6=s\xe6\xcc\xfc\xb7\xb8\xdd\xb3\xa2\xc7\x1e\xd0\x1d?X\xb1\xa9\xa9\xe9\'P\xbb\xea\x01\x0e\xb6m\xfb\r W\xf4\x98\x03\xbac\xd8\xc3#\x99\xb6n\xddZ\xa9\xc4\xffw\xac^\xfb\xact\xdb\xa6m\x9b\xa7\xb4(z\xac\x01\xdd9\xe8\xf6j\x13tv\xb3\xc6K\x97.u\xd9C\x16m[\xb6\xcdpX\x8f\x8bTTh\xe3\xf0ZI&\xe7\xec\xa2\x92\xa9S\xa7f\xef\xdf\xbf\xff\xeb\xc7&\xdb6l[<\x99E\xd1\xe3\x0b\xe8\t8/\xb5\xf1\xba\xb5\xd9\x1b6l\xe8t\x0b_\xdb\xb2\xdb6l[\x8c\xcb\x15=\xb6\x80\x9e\x80\xf3R4;\xce}\xf7\xee\xdd\n\xec\xbf\xab\xea\xb5\xb3\xec\xf6]\xdbF\xec\xff\x07&@G\x04\xbf\xae\xeav\x0e\xfa\xaaU\xab*\xad\xf8\xef\xaaz\xf8{h\xdbW\xae\\\x99o\x83j\xaeR\xe9\x8c1z\t\xcd\xce`\x0bOY\r\x95\xba\xa3%|\xc6\xbec\xdf\x8d\xbd\xff\x98\x00\x1d\x11\xfc\xd9\xb1\xf5\xe6\xe6\xe6\xdf\x8e\xd5k\xc7\xe6\xf6\x1d\x8e\x99\xab\x94\x1a\xa3\xa2\x97\x18\xf8G\x8f\x1eUZ\xf8_-\xe1o\xf6Y\xdauE\x8f\x1d\xa0\'\xe0\xac"A^__\x9fm\xdb\xb6\xad\xcd\xe5\xac\xd5U=\xfc;\x1c7\xb7\xcf\xdaw\x80]\xa54*z\t\xcdNr\xb1c\xe0v\x8f\xf5\x0f\x1f>\xb4\x99\x98\xab\x06=Ts\xfb\x8c}\xd6\xbe\xc3m\x9a\x15=~\x80\x9e\x80\xc3\x8abv\x12MCCCv\xfe\xfc\xf9JU\xaf]\xc2{\xf6\x19\xfb\xac}\'\xf6~c\x02tD\xd09\xd0\xed0\xd9\x8a\x15+\xdaT\xf4j\x0b\x15\xdd>c\x9f\x05t\x95Vc\xb4\xee%6;\xf1\xc5\xae#\x7f\xf6\xec\xd9O\xb0\x07\xc8\xedo\xf6\x19N\x92Q\xf4x\x01z\x02\x8e*\xa2Y\x85\xb6\xc3e\x07\x0f\x1e\xfc\xa9}\x0f\xeb\xf67\xfb\x0c\xd5\\\xd1\xe3\x05\xe8\t8\xaa\xc8\xe3\xf4%K\x96\xb4\x99i\xaf\x9e\x81\xb7\xbf1>W\xf4X\x01z\x02N*\xb2YK>j\xd4\xa8\xec\xe9\xd3\xa7\x95\xf6=\xb4\xed\xf6\x9e\xfd\x8d\xb6]\xd1\xe3\x04\xe8\t8\xa9\x0c\x93r\x87\x0f\x1f\xae\xb4\xec\xa1m\xb7\xf7\x98\x84S\xf4\x18\x01z\x02\x0e*\xba\x85Sb\xedb\x95\xda\x8an\xef\x85S^c\xef\'\xa6n\xf5\x01\xb3\xee\x0eDf\x17\xaaL\x9c8\xb1r\x13I[l\xdd\xde\xe3"\x16\xb90@w`v\xb6\x9b\xdd\xc5\xb5\xb5\xb5\xb5\x02\xba\xad\xdb{\x9c\t\xa7\xe8\xf1\x01\xf4\x04\x1cT\x06\x0bw\x9f\xd9\xb4iS\x05t[\x0fw\x91\x89\xbd\x7f\x98\xba\xdd\x07Tt\'Ow\xb1\xea=\x7f\xfe\xfc\xca\x18\xdd\xd6CE\xe7\xc6\x8f\x8a\x1e\'@O\xc0Ie0;\x84f3\xf0/_\xbe\xcc\xcd\xd69\xac\xa6\xe8q\x01\xf4\x04\x9cS&3\xb0\xed2T\x1b\x9b\x9b\xd9:g\xc3)z\\\x00=\x01\xe7\x94\xc5\xc25\xeauuu\xd9\xf6\xed\xdbs\xb3u\xae=W\xf4\xd8\x00z\x02\xce)\x93\xd9X\xbc\xb1\xb11\x9b3gNn\xb6\xce\x8c\xbb\xa2\xc7\x05\xd0\x13pN\x99,L\xb8\xd9k\xf5z\xec\xfd\xc2\xd4#>`\xd6\xdd\x91\xd8\xaa\xc1\x06r\xb92@O \x08\x80\x1e\xdf7*\xb9\x01z\x02A\xc0\xf0\x81\x00\x1d\x11\x90\x08\xd0\x80\xa8\xe8\x88\x80D\x80\x06D\xeb\x8e\x08H\x04r\xef\x03\xc6\xe8\x88\xc0=\x04r\xa0\x01@O \x08\x18>\x10\xa0#\x02\x12\x01\x1a\x10\x15\x1d\x11\x90\x08\xd0\x80h\xdd\x11\x01\x89@\xee}\xc0\x18\x1d\x11\xb8\x87@\x0e4\x00\xe8\t\x04\x01\xc3\x07\x02tD@"@\x03\xa2\xa2#\x02\x12\x01\x1a\x10\xad;" \x11\xc8\xbd\x0f\x18\xa3#\x02\xf7\x10\xc8\x81\x06\x00=\x81 `\xf8@\x80\x8e\x08H\x04h@TtD@"@\x03\xa2uG\x04$\x02\xb9\xf7\x01ctD\xe0\x1e\x029\xd0\x00\xa0\'\x10\x04\x0c\x1f\x08\xd0\x11\x01\x89\x00\r\x88\x8a\x8e\x08H\x04h@\xb4\xee\x88\x80D \xf7>`\x8c\x8e\x08\xdcC \x07\x1a\x00\xf4\x04\x82\x80\xe1\x03\x01:" \x11\xa0\x01Q\xd1\x11\x01\x89\x00\r\x88\xd6\x1d\x11\x90\x08\xe4\xde\x07\x8c\xd1\x11\x81{\x08\xe4@\x03\x80\x9e@\x100| @G\x04$\x024 *:" \x11\xa0\x01\xd1\xba#\x02\x12\x81\xdc\xfb\x801:"p\x0f\x81\x1ch\x00\xd0\x13\x08\x02\x86\x0f\x04\xe8\x88\x80D\x80\x06DEG\x04$\x024 ZwD@"\x90{\x1f0FG\x04\xee!\x90\x03\r\x00z\x02A\xc0\xf0\x81\x00\x1d\x11\x90\x08\xd0\x80\xa8\xe8\x88\x80D\x80\x06D\xeb\x8e\x08H\x04r\xef\x03\xc6\xe8\x88\xc0=\x04r\xa0\x01@O \x08\x18>\x10\xa0#\x02\x12\x01\x1a\x10\x15\x1d\x11\x90\x08\xd0\x80h\xdd\x11\x01\x89@\xee}\xc0\x18\x1d\x11\xb8\x87@\x0e4\x00\xe8\t\x04\x01\xc3\x07\x02tD@"@\x03\xa2\xa2#\x02\x12\x01\x1a\x10\xad;" \x11\xc8\xbd\x0f\x18\xa3#\x02\xf7\x10\xc8\x81\x06\x00=\x81 `\xf8@\x80\x8e\x08H\x04h@TtD@"@\x03\xa2uG\x04$\x02\xb9\xf7\x01ctD\xe0\x1e\x029\xd0\x00\xa0\'\x10\x04\x0c\x1f\x00:" \x11\xa0\x81\x8c\x8a\x8e\x08H\x04h \xa3uG\x04$\x02\xe1\x03\xc6\xe8\x88\x80D\xa0\xf2\xfb\x00\xd0\x13\x08\x02\x86\x0f\x04\xe8\x88\x80D\x80\x06DEG\x04$\x024 ZwD@"\x90{\x1f0FG\x04\xee!\x90\x03\r\x00z\x02A\xc0\xf0\x81\x00\x1d\x11\x90\x08\xd0\x80\xa8\xe8\x88\x80D\x80\x06D\xeb\x8e\x08H\x04r\xef\x03\xc6\xe8\x88\xc0=\x04r\xa0\x01@O \x08\x18>\x10\xa0#\x02\x12\x01\x1a\x10\x15\x1d\x11\x90\x08\xd0\x80h\xdd\x11\x01\x89@\xee}\xc0\x18\x1d\x11\xb8\x87@\x0e4\x00\xe8\t\x04\x01\xc3\x07\x02tD@"@\x03\xfaK\x1f\xfc\x07\x1b\xc4\xd0\xa7\xfd\x93p\xb8\x00\x00\x00\x00IEND\xaeB`\x82')))
            image.save("totems\\pack.png")
        
        self.directory = pathlib.Path(self.SKINS_DIR)
        
        pack_mcmeta_path = os.path.join(self.TOTEMS_DIR, self.PACK_MC_META)
        if not os.path.exists(pack_mcmeta_path):
            with open(pack_mcmeta_path, "w+") as prop_file:
                prop_file.write('{"pack":{"pack_format":9,"description":"§fTotem pack'
                                '\n§fMade with: §cSTT§f!\n§fBy: §cUnFamousSoul"}}')

    def run(self):
        for item in self.directory.iterdir():
            if item.is_file():
                self.make_totem(item)

    @staticmethod
    def head(skin, uol):
        head = Image.new("RGBA", (8, 8))

        head.paste(skin.crop((9, 8, 15, 9)), (1, 0))
        head.paste(skin.crop((8, 9, 16, 16)), (0, 1))
        if uol:
            l21 = skin.crop((40, 8, 48, 9))
            l22 = skin.crop((40, 9, 48, 16))
            head.paste(l21, (0, 0), l21)
            head.paste(l22, (0, 1), l22)
        return head

    @staticmethod
    def body(skin, uol):
        body = Image.new("RGBA", (8, 4))

        body.paste(skin.crop((20, 21, 28, 22)), (0, 0))
        body.paste(skin.crop((20, 23, 28, 24)), (0, 1))
        body.paste(skin.crop((20, 29, 28, 30)), (0, 2))
        body.paste(skin.crop((20, 31, 28, 32)), (0, 3))
        if uol:
            l21 = skin.crop((20, 37, 28, 38))
            l22 = skin.crop((20, 39, 28, 40))
            l23 = skin.crop((20, 45, 28, 46))
            l24 = skin.crop((20, 47, 28, 48))
            body.paste(l21, (0, 0), l21)
            body.paste(l22, (0, 1), l22)
            body.paste(l23, (0, 2), l23)
            body.paste(l24, (0, 3), l24)
        return body

    @staticmethod
    def legs(skin, uol):
        legs = Image.new("RGBA", (6, 3))

        legs.paste(skin.crop((4, 20, 5, 22)), (0, 0))
        legs.paste(skin.crop((6, 20, 8, 22)), (1, 0))
        legs.paste(skin.crop((20, 52, 22, 54)), (3, 0))
        legs.paste(skin.crop((23, 52, 24, 54)), (5, 0))

        legs.paste(skin.crop((4, 31, 5, 32)), (1, 2))
        legs.paste(skin.crop((7, 31, 8, 32)), (2, 2))
        legs.paste(skin.crop((20, 63, 21, 64)), (3, 2))
        legs.paste(skin.crop((23, 63, 24, 64)), (4, 2))
        if uol:
            l21 = skin.crop((4, 36, 5, 38))
            l22 = skin.crop((6, 36, 8, 38))
            l23 = skin.crop((4, 52, 6, 54))
            l24 = skin.crop((7, 52, 8, 54))
            legs.paste(l21, (0, 0), l21)
            legs.paste(l22, (1, 0), l22)
            legs.paste(l23, (3, 0), l23)
            legs.paste(l24, (5, 0), l24)

            l25 = skin.crop((4, 47, 5, 48))
            l26 = skin.crop((7, 47, 8, 48))
            l27 = skin.crop((4, 63, 5, 64))
            l28 = skin.crop((7, 63, 8, 64))
            legs.paste(l25, (1, 2), l25)
            legs.paste(l26, (2, 2), l26)
            legs.paste(l27, (3, 2), l27)
            legs.paste(l28, (4, 2), l28)
        return legs

    @staticmethod
    def arms(skin, uol):
        arms = Image.new("RGBA", (14, 3))

        arms.paste(skin.crop((37, 52, 40, 54)).rotate(90, expand=True), (11, 0))
        arms.paste(skin.crop((44, 20, 47, 22)).rotate(-90, expand=True), (1, 0))
        arms.paste(skin.crop((39, 63, 40, 64)), (13, 0))
        arms.paste(skin.crop((36, 63, 37, 64)), (13, 1))
        arms.paste(skin.crop((44, 31, 45, 32)), (0, 0))
        arms.paste(skin.crop((47, 31, 48, 32)), (0, 1))
        if uol:
            l21 = skin.crop((53, 52, 56, 54)).rotate(90, expand=True)
            l22 = skin.crop((44, 36, 47, 38)).rotate(-90, expand=True)
            l23 = skin.crop((55, 63, 56, 64))
            l24 = skin.crop((52, 63, 53, 64))
            l25 = skin.crop((44, 47, 45, 48))
            l26 = skin.crop((47, 47, 48, 48))

            arms.paste(l21, (11, 0), l21)
            arms.paste(l22, (1, 0), l22)
            arms.paste(l23, (13, 0), l23)
            arms.paste(l24, (13, 1), l24)
            arms.paste(l25, (0, 0), l25)
            arms.paste(l26, (0, 1), l26)

        return arms

    def make_totem(self, user, uol=True):
        if not user.parts[-1].endswith(".png"):
            user = user.with_suffix(".png")
        
        nickname = user.stem.lower()
        canvas = Image.new("RGBA", (16, 16))
        skin = Image.open(user).convert("RGBA")

        torso = self.body(skin, uol)
        head = self.head(skin, uol)
        legs = self.legs(skin, uol)
        arms = self.arms(skin, uol)

        canvas.paste(arms, (1, 8))
        canvas.paste(legs, (5, 13))
        if skin.size[1] == 32:
            canvas.paste(ImageOps.mirror(canvas.crop((0, 0, 8, 16))), (8, 0))

        canvas.paste(torso, (4, 9))
        canvas.paste(head, (4, 1))

        filename = f"{nickname}.png"
        filepath = os.path.join(self.TOTEMS_DIR, self.ASSETS_DIR, self.MINECRAFT_DIR, self.OPTIFINE_DIR,
                                self.CIT_DIR, self.TOTEM_OF_UNDYING_DIR, filename)
        canvas.save(filepath)
        
        prop_file_content = 'type=item\nmatchItems=totem_of_undying\ntexture={N}.png\nnbt.display.Name=ipattern:{N}'
        with open(os.path.join(self.TOTEMS_DIR, self.ASSETS_DIR, self.MINECRAFT_DIR, self.OPTIFINE_DIR,
                               self.CIT_DIR, self.TOTEM_OF_UNDYING_DIR, f"{nickname}.properties"), "w+") as prop_file:
            prop_file.write(prop_file_content.format(N=nickname))


if __name__ == "__main__":
    stt = STT()
    stt.run()
